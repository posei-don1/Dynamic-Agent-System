{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ok\\\\Desktop\\\\DAIS\\\\Dynamic-Agent-System\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport LeftPanel from './components/LeftPanel';\nimport CenterPanel from './components/CenterPanel';\nimport RightPanel from './components/RightPanel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedPersona, setSelectedPersona] = useState('financial_analyst');\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [currentQuery, setCurrentQuery] = useState('');\n  const [queryResult, setQueryResult] = useState(null);\n  const [processingFlow, setProcessingFlow] = useState([]);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const handleFileUpload = files => {\n    setUploadedFiles(prev => [...prev, ...files]);\n  };\n  const handleQuerySubmit = async query => {\n    setCurrentQuery(query);\n    setIsProcessing(true);\n    setProcessingFlow([]);\n    try {\n      // Simulate processing flow\n      const flowSteps = [{\n        step: 'persona_selection',\n        status: 'processing',\n        timestamp: new Date()\n      }, {\n        step: 'routing',\n        status: 'processing',\n        timestamp: new Date()\n      }, {\n        step: 'document_processing',\n        status: 'processing',\n        timestamp: new Date()\n      }, {\n        step: 'suggestion_generation',\n        status: 'processing',\n        timestamp: new Date()\n      }, {\n        step: 'answer_formatting',\n        status: 'processing',\n        timestamp: new Date()\n      }];\n\n      // Update flow steps progressively\n      for (let i = 0; i < flowSteps.length; i++) {\n        await new Promise(resolve => setTimeout(resolve, 500));\n        setProcessingFlow(prev => [...prev, {\n          ...flowSteps[i],\n          status: 'completed'\n        }]);\n      }\n\n      // Make API call to backend\n      const response = await fetch('http://localhost:8000/query', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          query: query,\n          persona: selectedPersona,\n          context: {\n            files: uploadedFiles.map(f => f.name)\n          }\n        })\n      });\n      const result = await response.json();\n      setQueryResult(result);\n    } catch (error) {\n      console.error('Query failed:', error);\n      setQueryResult({\n        error: 'Failed to process query',\n        formatted_response: {\n          response: 'An error occurred while processing your query.',\n          suggestions: []\n        }\n      });\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n  const handlePersonaChange = persona => {\n    setSelectedPersona(persona);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-screen bg-dark-primary flex\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-80 min-w-80 max-w-80 p-4\",\n      children: /*#__PURE__*/_jsxDEV(LeftPanel, {\n        selectedPersona: selectedPersona,\n        onPersonaChange: handlePersonaChange,\n        uploadedFiles: uploadedFiles,\n        onFileUpload: handleFileUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 p-4\",\n      children: /*#__PURE__*/_jsxDEV(CenterPanel, {\n        currentQuery: currentQuery,\n        queryResult: queryResult,\n        isProcessing: isProcessing,\n        onQuerySubmit: handleQuerySubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-80 min-w-80 max-w-80 p-4\",\n      children: /*#__PURE__*/_jsxDEV(RightPanel, {\n        queryResult: queryResult,\n        processingFlow: processingFlow,\n        uploadedFiles: uploadedFiles\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"9BVxGB9EPwX0KLBPpcZx1i1j5Y8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","LeftPanel","CenterPanel","RightPanel","jsxDEV","_jsxDEV","App","_s","selectedPersona","setSelectedPersona","uploadedFiles","setUploadedFiles","currentQuery","setCurrentQuery","queryResult","setQueryResult","processingFlow","setProcessingFlow","isProcessing","setIsProcessing","handleFileUpload","files","prev","handleQuerySubmit","query","flowSteps","step","status","timestamp","Date","i","length","Promise","resolve","setTimeout","response","fetch","method","headers","body","JSON","stringify","persona","context","map","f","name","result","json","error","console","formatted_response","suggestions","handlePersonaChange","className","children","onPersonaChange","onFileUpload","fileName","_jsxFileName","lineNumber","columnNumber","onQuerySubmit","_c","$RefreshReg$"],"sources":["C:/Users/ok/Desktop/DAIS/Dynamic-Agent-System/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport LeftPanel from './components/LeftPanel';\r\nimport CenterPanel from './components/CenterPanel';\r\nimport RightPanel from './components/RightPanel';\r\n\r\nfunction App() {\r\n  const [selectedPersona, setSelectedPersona] = useState('financial_analyst');\r\n  const [uploadedFiles, setUploadedFiles] = useState([]);\r\n  const [currentQuery, setCurrentQuery] = useState('');\r\n  const [queryResult, setQueryResult] = useState(null);\r\n  const [processingFlow, setProcessingFlow] = useState([]);\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n\r\n  const handleFileUpload = (files) => {\r\n    setUploadedFiles(prev => [...prev, ...files]);\r\n  };\r\n\r\n  const handleQuerySubmit = async (query) => {\r\n    setCurrentQuery(query);\r\n    setIsProcessing(true);\r\n    setProcessingFlow([]);\r\n\r\n    try {\r\n      // Simulate processing flow\r\n      const flowSteps = [\r\n        { step: 'persona_selection', status: 'processing', timestamp: new Date() },\r\n        { step: 'routing', status: 'processing', timestamp: new Date() },\r\n        { step: 'document_processing', status: 'processing', timestamp: new Date() },\r\n        { step: 'suggestion_generation', status: 'processing', timestamp: new Date() },\r\n        { step: 'answer_formatting', status: 'processing', timestamp: new Date() }\r\n      ];\r\n\r\n      // Update flow steps progressively\r\n      for (let i = 0; i < flowSteps.length; i++) {\r\n        await new Promise(resolve => setTimeout(resolve, 500));\r\n        setProcessingFlow(prev => [...prev, { ...flowSteps[i], status: 'completed' }]);\r\n      }\r\n\r\n      // Make API call to backend\r\n      const response = await fetch('http://localhost:8000/query', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          query: query,\r\n          persona: selectedPersona,\r\n          context: {\r\n            files: uploadedFiles.map(f => f.name)\r\n          }\r\n        })\r\n      });\r\n\r\n      const result = await response.json();\r\n      setQueryResult(result);\r\n    } catch (error) {\r\n      console.error('Query failed:', error);\r\n      setQueryResult({\r\n        error: 'Failed to process query',\r\n        formatted_response: {\r\n          response: 'An error occurred while processing your query.',\r\n          suggestions: []\r\n        }\r\n      });\r\n    } finally {\r\n      setIsProcessing(false);\r\n    }\r\n  };\r\n\r\n  const handlePersonaChange = (persona) => {\r\n    setSelectedPersona(persona);\r\n  };\r\n\r\n  return (\r\n    <div className=\"h-screen bg-dark-primary flex\">\r\n      {/* Left Panel - KB Sources and Persona Management */}\r\n      <div className=\"w-80 min-w-80 max-w-80 p-4\">\r\n        <LeftPanel\r\n          selectedPersona={selectedPersona}\r\n          onPersonaChange={handlePersonaChange}\r\n          uploadedFiles={uploadedFiles}\r\n          onFileUpload={handleFileUpload}\r\n        />\r\n      </div>\r\n\r\n      {/* Center Panel - Chat + Answer + Suggested Queries */}\r\n      <div className=\"flex-1 p-4\">\r\n        <CenterPanel\r\n          currentQuery={currentQuery}\r\n          queryResult={queryResult}\r\n          isProcessing={isProcessing}\r\n          onQuerySubmit={handleQuerySubmit}\r\n        />\r\n      </div>\r\n\r\n      {/* Right Panel - Metadata and Source Preview */}\r\n      <div className=\"w-80 min-w-80 max-w-80 p-4\">\r\n        <RightPanel\r\n          queryResult={queryResult}\r\n          processingFlow={processingFlow}\r\n          uploadedFiles={uploadedFiles}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}